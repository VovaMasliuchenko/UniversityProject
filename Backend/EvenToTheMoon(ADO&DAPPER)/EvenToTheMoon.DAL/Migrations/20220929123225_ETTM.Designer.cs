// <auto-generated />
using System;
using EvenToTheMoonEF.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvenToTheMoon.DAL.Migrations
{
    [DbContext(typeof(EvenToTheMoonDBContext))]
    [Migration("20220929123225_ETTM")]
    partial class ETTM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameOfDiscount")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Size")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HotelClass")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HotelType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Nutrition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeNutrition")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Nutrition");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.TourCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TourCategorie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TourCategories");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Tours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityOfDepartue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CountOfPerson")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfDepartue")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysAndNights")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("ID_Country")
                        .HasColumnType("int");

                    b.Property<int>("ID_Discount")
                        .HasColumnType("int");

                    b.Property<int>("ID_Hotel")
                        .HasColumnType("int");

                    b.Property<int>("ID_Nutrition")
                        .HasColumnType("int");

                    b.Property<int>("ID_Tour_Categories")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("Tour")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ID_Country");

                    b.HasIndex("ID_Discount");

                    b.HasIndex("ID_Hotel");

                    b.HasIndex("ID_Nutrition");

                    b.HasIndex("ID_Tour_Categories");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Tours", b =>
                {
                    b.HasOne("EvenToTheMoon.DAL.Entities.Country", "country")
                        .WithMany("tours")
                        .HasForeignKey("ID_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvenToTheMoon.DAL.Entities.Discount", "discount")
                        .WithMany("tours")
                        .HasForeignKey("ID_Discount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvenToTheMoon.DAL.Entities.Hotel", "hotel")
                        .WithMany("tours")
                        .HasForeignKey("ID_Hotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvenToTheMoon.DAL.Entities.Nutrition", "nutrition")
                        .WithMany("tours")
                        .HasForeignKey("ID_Nutrition")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvenToTheMoon.DAL.Entities.TourCategories", "tourCategories")
                        .WithMany("tours")
                        .HasForeignKey("ID_Tour_Categories")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");

                    b.Navigation("discount");

                    b.Navigation("hotel");

                    b.Navigation("nutrition");

                    b.Navigation("tourCategories");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Country", b =>
                {
                    b.Navigation("tours");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Discount", b =>
                {
                    b.Navigation("tours");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Hotel", b =>
                {
                    b.Navigation("tours");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.Nutrition", b =>
                {
                    b.Navigation("tours");
                });

            modelBuilder.Entity("EvenToTheMoon.DAL.Entities.TourCategories", b =>
                {
                    b.Navigation("tours");
                });
#pragma warning restore 612, 618
        }
    }
}
